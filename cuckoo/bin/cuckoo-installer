#!/bin/sh
#
# A desktop-oriented virtual machines management system written in Shell.
#
# Code is available online at https://github.com/magenete/cuckoo
# See LICENSE for licensing information, and README for details.
#
# Copyright (C) 2016 Magenete Systems OÃœ.
#


CUCKOO_GIT_BRANCH="master"
CUCKOO_GIT_URL="https://github.com/magenete/cuckoo/archive/${CUCKOO_GIT_BRANCH}.tar.gz"

CUCKOO_ACTION=""
CUCKOO_ACTION_DEFAULT="install"
CUCKOO_INSTALLER_DIR=".cuckoo/"
CUCKOO_BRANCH_DIR="${CUCKOO_INSTALLER_DIR}cuckoo-${CUCKOO_GIT_BRANCH}/"
CUCKOO_DIR="${CUCKOO_BRANCH_DIR}/cuckoo/"
CUCKOO_LIB_DIR="${CUCKOO_DIR}lib/"
CUCKOO_ISO_DIR="${CUCKOO_DIR}iso/"
CUCKOO_ETC_DIR="${CUCKOO_DIR}etc/"
CUCKOO_ETC_VERSION_FILE="${CUCKOO_ETC_DIR}VERSION"
CUCKOO_OS_DIR="${CUCKOO_DIR}os/"
CUCKOO_OS_COMMON_DIR="${CUCKOO_OS_DIR}.common/"
CUCKOO_HD_DIR="${CUCKOO_DIR}hd/"
CUCKOO_BIN_DIR="${CUCKOO_DIR}bin/"
CUCKOO_BIN_FILE="${CUCKOO_BIN_DIR}cuckoo"
CUCKOO_LAUNCHER_DIR="${CUCKOO_DIR}../launcher/"
CUCKOO_LAUNCHER_INSTALL_DIR="${CUCKOO_LAUNCHER_DIR}install/"
CUCKOO_LAUNCHER_RUN_DIR="${CUCKOO_LAUNCHER_DIR}run/"
CUCKOO_LAUNCHER_DESKTOP_DIR="${CUCKOO_LAUNCHER_DIR}.desktop/"
CUCKOO_VERBOSE=""

CUCKOO_USER_HOME_DESKTOP_DIR="${HOME}/.local/share/applications/"


QEMU_DIR="${CUCKOO_DIR}../qemu/"
QEMU_LIB_DIR="${QEMU_DIR}lib/"
QEMU_BIN_DIR="${QEMU_DIR}bin/"

HOME_SHELL_PROFILE_FILES=".bash_profile .bashrc .mkshrc .profile .zlogin .zshrc"


# Help message
cuckoo_help()
{
    cat << _H_E_L_P

Usage: $(basename $0) [arguments]

Cuckoo install/uninstall script.

  i, install    Install Cuckoo (by default).
  u, uninstall  Uninstall Cuckoo.
  v, verbose    Print log messages.

     version    Print the current version.
  h, help       Show this message.

_H_E_L_P
}


# Print help, error message and exit
cuckoo_error()
{
    cuckoo_help

    echo ""
    echo "ERROR: ${1}"
    echo ""

    exit 1
}


# Print message
cuckoo_message()
{
    echo ""
    echo "$1"
    echo ""
}


# Cuckoo install
cuckoo_install()
{
    # Make project directory and download source from Git
    mkdir $CUCKOO_VERBOSE -p "${HOME}/${CUCKOO_INSTALLER_DIR}" && cd "${HOME}/${CUCKOO_INSTALLER_DIR}"
    if [ $? -gt 0 ]
    then
        cuckoo_error "Could not create directory '${HOME}/${CUCKOO_INSTALLER_DIR}'"
    else
        [ "$CUCKOO_VERBOSE" != "" ] && cuckoo_message "Directory '${HOME}/${CUCKOO_INSTALLER_DIR}' was created"

        curl -$([ "$CUCKOO_VERBOSE" = "" ] && echo "s" || echo "")SL "$CUCKOO_GIT_URL" | tar -xz $CUCKOO_VERBOSE
        if [ $? -gt 0 ]
        then
            cuckoo_error "Could not download file '$CUCKOO_GIT_URL'"
        else
            [ "$CUCKOO_VERBOSE" != "" ] && cuckoo_message "Source code was downloaded from '$CUCKOO_GIT_URL'"
        fi
    fi

    if [ -f "${HOME}/${CUCKOO_BIN_FILE}" ]
    then
        # Common
        chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_INSTALLER_DIR}"
        chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_DIR}../"

        cuckoo_launcher_install

        cuckoo_cuckoo_install

        cuckoo_qemu_install

        cuckoo_add_bin_path
    else
        cuckoo_error "Bin file '${HOME}/${CUCKOO_BIN_FILE}' does not exist"
    fi
}


# Launcher install
cuckoo_launcher_install()
{
    chmod $CUCKOO_VERBOSE 0700 -R "${HOME}/${CUCKOO_LAUNCHER_DIR}"
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${CUCKOO_LAUNCHER_DIR}"*.bat

    # Run and install
    for launcher_dir in "${HOME}/${CUCKOO_LAUNCHER_INSTALL_DIR}" "${HOME}/${CUCKOO_LAUNCHER_RUN_DIR}"
    do
        for cuckoo_arch in $(ls "$launcher_dir")
        do
            chmod $CUCKOO_VERBOSE 0600 "${launcher_dir}${cuckoo_arch}/"*.bat
        done
    done

    # Desktop
    mkdir $CUCKOO_VERBOSE "${HOME}/${CUCKOO_LAUNCHER_DESKTOP_DIR}"
    chmod $CUCKOO_VERBOSE -R 0700 "${HOME}/${CUCKOO_LAUNCHER_DESKTOP_DIR}"
}


# Cuckoo install
cuckoo_cuckoo_install()
{
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_DIR}"
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_DIR}"*

    # Bin
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_BIN_DIR}"*
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${CUCKOO_BIN_DIR}"*.bat

    # Etc
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_ETC_DIR}"*
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${CUCKOO_ETC_VERSION_FILE}"

    # ISO
    mkdir "${HOME}/${CUCKOO_ISO_DIR}"
    chmod $CUCKOO_VERBOSE -R 0700 "${HOME}/${CUCKOO_ISO_DIR}"

    # HD
    chmod $CUCKOO_VERBOSE -R 0700 "${HOME}/${CUCKOO_HD_DIR}"

    for cuckoo_arch in $(ls "${HOME}/${CUCKOO_HD_DIR}/")
    do
        # HD .clean
        for cuckoo_os in $(ls "${HOME}/${CUCKOO_HD_DIR}${cuckoo_arch}/")
        do
            chmod $CUCKOO_VERBOSE 0600 "${HOME}/${CUCKOO_HD_DIR}${cuckoo_arch}/${cuckoo_os}/.clean/"*
        done
    done

    # OS
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_OS_COMMON_DIR}"
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_OS_COMMON_DIR}"*

    # Lib
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${CUCKOO_LIB_DIR}"*
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${CUCKOO_LIB_DIR}mgt/"
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${CUCKOO_LIB_DIR}mgt/"*
}


# QEMU install
cuckoo_qemu_install()
{
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${QEMU_DIR}"

    # Bin
    mkdir "${HOME}/${QEMU_BIN_DIR}"
    chmod $CUCKOO_VERBOSE -R 0700 "${HOME}/${QEMU_BIN_DIR}"

    # Lib
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${QEMU_LIB_DIR}"
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${QEMU_LIB_DIR}"*
    chmod $CUCKOO_VERBOSE 0700 "${HOME}/${QEMU_LIB_DIR}mgt/"
    chmod $CUCKOO_VERBOSE 0600 "${HOME}/${QEMU_LIB_DIR}mgt/"*
}


# Add Cuckoo bin path in PATH
cuckoo_add_bin_path()
{
    if [ "$CUCKOO_VERBOSE" != "" ]
    then
        echo ""
        echo "Cuckoo bin path was added in PATH in the following file(s):"
    fi

    for shell_profile_file in $HOME_SHELL_PROFILE_FILES
    do
        if [ -f "${HOME}/${shell_profile_file}" ]
        then
            echo "" >> "${HOME}/${shell_profile_file}"
            echo "export PATH=\"\${PATH}:\${HOME}/${CUCKOO_BIN_DIR}\"  # Add Cuckoo to PATH for scripting" >> "${HOME}/${shell_profile_file}"

            [ "$CUCKOO_VERBOSE" != "" ] && echo "    '${HOME}/${shell_profile_file}'"
        fi
    done

    [ "$CUCKOO_VERBOSE" != "" ] && echo ""

    # Export new PATH
    export PATH="${PATH}:${HOME}/${CUCKOO_BIN_DIR}"
}


# Answer for uninstall
cuckoo_uninstall_answer()
{
    printf "This will completely uninstall cuckoo. Continue? (y/N):"
    read uninstall_answer

    case $uninstall_answer in
        Y | y | Yes | yes )
            rm $CUCKOO_VERBOSE -rf "${HOME}/${CUCKOO_BRANCH_DIR}"

            cuckoo_message "Directory '${HOME}/${CUCKOO_BRANCH_DIR}' deleted"
        ;;
        "" | N | n | No | no )
            cuckoo_message "Directory '${HOME}/${CUCKOO_BRANCH_DIR}' not deleted"
        ;;
        * )
            cuckoo_message "Please use Y|y|Yes|yes|N|n|No|no or just enter (by default No)."

            cuckoo_uninstall_answer
        ;;
    esac
}


# Uninstall
cuckoo_uninstall()
{
    # Information about Cuckoo bin path deleting in profile files
    echo ""
    echo "Please delete Cuckoo bin path from PATH in the following files:"

    for shell_profile_file in $HOME_SHELL_PROFILE_FILES
    do
        if [ -f "${HOME}/${shell_profile_file}" ]
        then
            echo "    ${HOME}/${shell_profile_file}"
        fi
    done

    # Desktop launcher
    rm $CUCKOO_VERBOSE -f "${CUCKOO_USER_HOME_DESKTOP_DIR}cuckoo"*
    echo ""
    echo "Desktop file(s) deleted in '${CUCKOO_USER_HOME_DESKTOP_DIR}'"

    # Directory delete after getting an answer
    if [ -d "${HOME}/${CUCKOO_BRANCH_DIR}" ]
    then
        cuckoo_message "Everything will be deleted in '${HOME}/${CUCKOO_BRANCH_DIR}'!"

        cuckoo_uninstall_answer

        [ -z "$(ls "${HOME}/${CUCKOO_INSTALLER_DIR}")" ] && rm -rf "${HOME}/${CUCKOO_INSTALLER_DIR}"
    else
        cuckoo_error "Directory '${HOME}/${CUCKOO_BRANCH_DIR}' does not exist"
    fi
}


# Options definition
case "$1" in
    install | i )
        CUCKOO_ACTION="install"
    ;;
    uninstall | u )
        CUCKOO_ACTION="uninstall"
    ;;
    verbose | v )
        CUCKOO_VERBOSE="-v"
    ;;
    version )
        echo "Cuckoo version: 0.2.0"
        exit 0
    ;;
    help | h )
        cuckoo_help
        exit 0
    ;;
    * )
        cuckoo_error "Invalid option '${1}'"
    ;;
esac

if [ ! -z "$1" ] && [ ! -z "$2" ]
then
    case "$2" in
        install | i )
            CUCKOO_ACTION="install"
        ;;
        uninstall | u )
            CUCKOO_ACTION="uninstall"
        ;;
        verbose | v )
            case "$1" in
                verbose | v )
                    cuckoo_error "Invalid option '${2}'"
                ;;
                * )
                    CUCKOO_VERBOSE="-v"
                ;;
            esac
        ;;
        * )
            cuckoo_error "Invalid option '${2}'"
        ;;
    esac
fi


# Launch
if [ "$(whoami)" = "$USER" ] && [ "$(basename $HOME)" = "$USER" ]
then
    [ -z "$CUCKOO_ACTION" ] && CUCKOO_ACTION="$CUCKOO_ACTION_DEFAULT"

    case "$CUCKOO_ACTION" in
        install )
            cuckoo_install
        ;;
        uninstall )
            cuckoo_uninstall
        ;;
    esac
else
    cuckoo_error "Invalid ENV of current user '$USER'"
fi
