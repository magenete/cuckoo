#!/bin/sh
#
# A desktop-oriented virtual machines management system written in Shell.
#
# Code is available online at https://github.com/magenete/cuckoo
# See LICENSE for licensing information, and README for details.
#
# Copyright (C) 2016 Magenete Systems OÃœ.
#


CUCKOO_PACKAGES_ACTION=""
CUCKOO_PACKAGES_MANAGER=""
CUCKOO_PACKAGES_MANAGER_ACTION=""
CUCKOO_PACKAGES_LIST=""
CUCKOO_PACKAGES_COMMAND=""
CUCKOO_PACKAGES_SUPERUSER_COMMAND=""


# Help message
cuckoo_help()
{
    cat << _H_E_L_P

Usage: $(basename $0) [arguments]

Deals with run and build dependencies for Cuckoo and QEMU
using native package manager of the host system.

  -i, --install    Install packages.
  -u, --uninstall  Uninstall packages.
  -l, --list       Get packages list.

  -s, --su         Run from superuser (root), using su.
  -U, --su-user    Run from some different user, using su.
  -S, --sudo       Run using sudo.

  -v, --version    Print the current version.
  -h, --help       Show this message.

_H_E_L_P
}


# Print help, error message and exit
cuckoo_error()
{
    cuckoo_help

    echo ""
    echo "ERROR: $1"
    echo ""

    exit 1
}


# System packages
cuckoo_packages_manager_action()
{
    case "$CUCKOO_PACKAGES_MANAGER" in
        apt-get )
            case "$CUCKOO_PACKAGES_ACTION" in
                install )
                    CUCKOO_PACKAGES_MANAGER_ACTION="install"
                ;;
                uninstall )
                    CUCKOO_PACKAGES_MANAGER_ACTION="purge"
                ;;
                * )
                    CUCKOO_PACKAGES_MANAGER_ACTION=""
                ;;
            esac
        ;;
        pacman )
            case "$CUCKOO_PACKAGES_ACTION" in
                install )
                    CUCKOO_PACKAGES_MANAGER_ACTION="-S"
                ;;
                uninstall )
                    CUCKOO_PACKAGES_MANAGER_ACTION="-Rs"
                ;;
                * )
                    CUCKOO_PACKAGES_MANAGER_ACTION=""
                ;;
            esac
        ;;
        * )
            cuckoo_error "Packages manager '${CUCKOO_PACKAGES_MANAGER}' is not supported"
        ;;
    esac
}


# System packages
cuckoo_packages()
{
    # Only for Linux
    . /etc/os-release

    case "$ID" in
        debian | ubuntu )
            CUCKOO_PACKAGES_MANAGER="apt-get"
            cuckoo_packages_manager_action
            CUCKOO_PACKAGES_LIST="libiscsi-dev libsdl2-dev libcap-dev libattr1-dev libpixman-1-dev flex curl tar python2.7"
        ;;
        arch )
            CUCKOO_PACKAGES_MANAGER="pacman"
            cuckoo_packages_manager_action
            CUCKOO_PACKAGES_LIST="libiscsi sdl libcap attr pixman flex curl tar python2"
        ;;
        * )
            cuckoo_error "System packages were not supported for '${ID}'!"
        ;;
    esac
}


# Print packages list
cuckoo_packages_list()
{
    echo ""
    echo "Packages list for the current system:"

    for package in $CUCKOO_PACKAGES_LIST
    do
        echo "    $package"
    done
    echo ""
}


# Check only Linux
if [ "$(uname -s)" != "Linux" ]
then
    cuckoo_error "Currently this OS is not supported for QEMU building\nYou should use only GNU/Linux!"
fi


# Options definition
OPTS="$(getopt -o "sU:Siulvh" -l "su,su-user:,sudo,install,uninstall,list,version,help" -a -- "$@" 2>/dev/null)"
if [ $? -gt 0 ]
then
    cuckoo_error "Invalid option(s) value"
fi

eval set -- "$OPTS"

# Options parsing
while [ $# -gt 0 ]
do
    case $1 in
    -- )
        shift 1
    ;;
    --su | -s )
        CUCKOO_PACKAGES_SUPERUSER_COMMAND="su --login root"
        shift 1
    ;;
    --su-user | -U )
        CUCKOO_PACKAGES_SUPERUSER_COMMAND="su --login ${2}"
        shift 2
    ;;
    --sudo | -S )
        CUCKOO_PACKAGES_SUPERUSER_COMMAND="sudo"
        shift 1
    ;;
    --install | -i )
        CUCKOO_PACKAGES_ACTION="install"
        shift 1
    ;;
    --uninstall | -u )
        CUCKOO_PACKAGES_ACTION="uninstall"
        shift 1
    ;;
    --list | -l )
        CUCKOO_PACKAGES_ACTION="list"
        shift 1
    ;;
    --version | -v )
        echo "Cuckoo version: $(cat "$(realpath "$(readlink -f "$(dirname "$0")")/..")/etc/VERSION")"
        exit 0
    ;;
    --help | -h )
        cuckoo_help
        exit 0
    ;;
    * )
        cuckoo_error "Invalid option '$1'"
    ;;
    esac
done


# Run
cuckoo_packages

case "$CUCKOO_PACKAGES_ACTION" in
    install | uninstall )
        CUCKOO_PACKAGES_COMMAND="${CUCKOO_PACKAGES_MANAGER} ${CUCKOO_PACKAGES_MANAGER_ACTION} ${CUCKOO_PACKAGES_LIST}"

        if [ "$CUCKOO_PACKAGES_SUPERUSER_COMMAND" = "sudo" ]
        then
            $CUCKOO_PACKAGES_SUPERUSER_COMMAND $CUCKOO_PACKAGES_COMMAND
        else
            $CUCKOO_PACKAGES_SUPERUSER_COMMAND --command "$CUCKOO_PACKAGES_COMMAND"
        fi
    ;;
    list )
        cuckoo_packages_list
        exit 0
    ;;
esac
